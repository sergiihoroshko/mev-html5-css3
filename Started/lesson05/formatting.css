#element1, #element2, #element3 {
    width: 100px;
    height: 100px;
/* Попробовать изменить left на right у всех элементов, а затем у одного. */
    float: left;
}
#element1 {
    background-color: red;
}
#element2 {
    background-color: green;
}
#element3 {
    background-color: yellow;
}
div.container1 {
    width: 100%;
    background-color: aquamarine;
/* Первый способ отменить схлопывание. */
    overflow: auto;
}
div.container1 > div {
    width: 100px;
    height: 100px;
    float: left;
}
/* Второй способ. */
/*.container:last-child::after{
    content: "";
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
}*/
#element4 {
    background-color: red; 
}
#element5 {
    background-color: green;
}
#element6 {
    background-color: yellow;
}
/* clear */
#element7, #element8, #element9, #element10 {
    width: 100px;
    height: 100px;
    float: left;
}
#element7 {
    background-color: gold;
}
#element8 {
    background-color: blue;
}
#element9 {
    background-color: green;
    clear: left;
}
#element10 {
    background-color: red;
}
.container2 {
    width: 50%;
    margin: 20px auto;
    padding: 20px;
    text-align: justify;
    border: 2px solid black;
    height: 300px;
/* Свойство overflow управляет отображением содержания блочного элемента, если оно целивом не помещается и выходит за границы блока.
    Имеет следующие значения:
        - visible - отображается все содержимое, даже за пределами области.
        - hidden - отображается только тот контент, который не выходит за пределы.
        - scroll - отображаются полосы прокрутки.
        - auto - полосы прокрутки отображаются, только при необходимости.  */
    overflow: auto;
}
.container3 > div {
    width: 100px;
    height: 100px;
    background-color: hotpink;
    color: white;
    text-align: center;
    float: left;
    margin: 5px;
}
/* Решение для того что бы один div не залазил на второй div елемент */
.fix::after {
    content: " "; 
    display: block; 
    height: 0;
    clear: both; 
    visibility: hidden;
}
.container3 > div:nth-child(3) {
/* Cвойтво display пзволяет изменить поведение элемента.
    Значение none cкрывает элемент не резервируя место под него. */
    display: none;
}
.container3 > div:nth-child(6) {
/* Свойство visibility позволяет скрывать и отображать элемент, при этом резервируя под него место. */
    visibility: hidden;
}
/* example */
body{
    margin: 0;
}
#header{
    height: 150px;
    background-color : lightgray;
}
.content{
    height: 800px;
}
.left-bar{
    width: 30%;
    height: 800px;
    background-color: gold;
}
.main{
    width: 50%;
    height: 800px;
    background-color: aqua;
}
.right-bar {
    width: 20%;
    height: 800px;
    background-color: red;
}
#footer{
    height: 200px;
    background-color: green;
}
#header, .content, #footer {
    width: 100%;
}
.left-bar, .main, .right-bar {
    float: left;
}